{
  title: 'test #2',
  description: 'which way is faster when accessing variables residing in a parent/global scope?',

  HTML: "<div>Lorem ipsum</div>",
  init: "\
      var arr = [1, 5, 4, 2, 3];\n\
      var obj = {a: 1, b: 2, c: 3};\n\
      var rv = 0;\n\
\n\
      function init() {\n\
        window.console && console.log('init called');\n\
      }\n\
\n\
      function t_global_scope() {\n\
        if (!arr[7]) {\n\
          arr[7] = 1;\n\
        } else {\n\
          arr[7] += arr[2];\n\
        }\n\
        if (!obj.s) {\n\
          obj.s = 1;\n\
        } else {\n\
          obj.s += obj.b;\n\
        }\n\
        return arr[7] + obj.s;\n\
      }\n\
\n\
      function t_closure_scope() {\n\
        var arr = [1, 5, 4, 2, 3];\n\
        var obj = {a: 1, b: 2, c: 3};\n\
\n\
        function t_do() {\n\
          if (!arr[7]) {\n\
            arr[7] = 1;\n\
          } else {\n\
            arr[7] += arr[2];\n\
          }\n\
          if (!obj.s) {\n\
            obj.s = 1;\n\
          } else {\n\
            obj.s += obj.b;\n\
          }\n\
          return arr[7] + obj.s;\n\
        }\n\
\n\
        return t_do;\n\
      }\n\
      var t_closure_scope_f = t_closure_scope();\n\
\n\
      function t_pass_by_ref(arr, obj) {\n\
        if (!arr[7]) {\n\
          arr[7] = 1;\n\
        } else {\n\
          arr[7] += arr[2];\n\
        }\n\
        if (!obj.s) {\n\
          obj.s = 1;\n\
        } else {\n\
          obj.s += obj.b;\n\
        }\n\
        return arr[7] + obj.s;\n\
      }\n\
      ",
  tests: [
    {
      name: 'Global Scope', 
      fn: '\
        rv += t_global_scope();'
    },
    {
      name: 'Parent / Closure', 
      fn: '\
        rv += t_closure_scope_f();'
    },
    { 
      name: 'CPS / Pass By Reference', 
      'defer': false,
      'fn': '\
        rv += t_pass_by_ref(arr, obj);'
    },
  ],
  setup: "\
        Benchmark.prototype.setup = function () {\n\
	  rv = 0;\n\
	};\n\
        ",
  teardown: "\
        var pulse_counter = 0;\n\
        Benchmark.prototype.teardown = function () {\n\
	  pulse_counter++;\n\
	  if (pulse_counter >= 1000) {\n\
	    pulse_counter = 0;\n\
	    console.log('rv = ', rv);\n\
	  }\n\
        };\n\
        "
}
