test0001-demo.json5
test0002-pass-by-reference-vs-parent-scope.json5
test0003-floating-point-serialization-deserialization.json5
test0004-fp-encode-only.json5
test0005-fp-decode-only.json5
test0006b-fp-encode-plus-decode.json5
test0006-fp-encode-plus-decode.json5
test0007-inlining-fp-vs-indexed-column-storage.json5
test0008-array-join-vs-string-add.json5
test0009.2-parent-scope-vs-pass-by-reference-1000.json5
test0009-parent-scope-vs-pass-by-reference.json5
test0010-typechecking-before-type-coercion.json5
test0011-large-switch-vs-if-and-small-switch.json5
test0012-modulo-vs-integer-check.json5
test0013-encoding-numeric-data-to-blob-and-back.json5
test0014-is-constant-folding-useful.json5
test0015-is-constant-propagation-useful.json5
test0016-secure-hashes-for-code-identification--who-is-the-fastest-kid-on-the-block.json5
test0017-math-min-max-vs-if-check.json5
test0018-the-proper-new-way-to-slice-arguments.json5
test0019-for-in-vs-object-keys-loop.json5
test0020-typeof-instanceof-isArray.json5
test0021-shallow-clones.json5
